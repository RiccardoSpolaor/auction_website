{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/edit-insertion/edit-insertion.component.ts","./src/app/Components/edit-insertion/edit-insertion.component.html","./src/app/Components/edit-profile/edit-profile.component.ts","./src/app/Components/edit-profile/edit-profile.component.html","./src/app/Components/insertion-list/insertion-list.component.ts","./src/app/Components/insertion-list/insertion-list.component.html","./src/app/Components/insertion/insertion.component.ts","./src/app/Components/insertion/insertion.component.html","./src/app/Components/login/login.component.ts","./src/app/Components/login/login.component.html","./src/app/Components/message-post/message-post.component.ts","./src/app/Components/message-post/message-post.component.html","./src/app/Components/message-reply/message-reply.component.ts","./src/app/Components/message-reply/message-reply.component.html","./src/app/Components/navbar/navbar.component.ts","./src/app/Components/navbar/navbar.component.html","./src/app/Components/notifications/notifications.component.ts","./src/app/Components/notifications/notifications.component.html","./src/app/Components/page-not-found/page-not-found.component.ts","./src/app/Components/page-not-found/page-not-found.component.html","./src/app/Components/post-insertion/post-insertion.component.ts","./src/app/Components/post-insertion/post-insertion.component.html","./src/app/Components/private-chat-list/private-chat-list.component.ts","./src/app/Components/private-chat-list/private-chat-list.component.html","./src/app/Components/private-chat/private-chat.component.ts","./src/app/Components/private-chat/private-chat.component.html","./src/app/Components/signup/signup.component.ts","./src/app/Components/signup/signup.component.html","./src/app/Components/signupmod/signupmod.component.ts","./src/app/Components/signupmod/signupmod.component.html","./src/app/Components/user-list/user-list.component.ts","./src/app/Components/user-list/user-list.component.html","./src/app/Components/user-stats/user-stats.component.ts","./src/app/Components/user-stats/user-stats.component.html","./src/app/Objects/IosObject.ts","./src/app/Services/insertion-http.service.ts","./src/app/Services/notification-http.service.ts","./src/app/Services/private-chat-http.service.ts","./src/app/Services/socketio.service.ts","./src/app/Services/user-http.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { InsertionHttpService } from '../../Services/insertion-http.service';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Insertion} from '../../Objects/Insertion'\n\n@Component({\n  selector: 'app-edit-insertion',\n  templateUrl: './edit-insertion.component.html',\n  styleUrls: ['./edit-insertion.component.css']\n})\nexport class EditInsertionComponent implements OnInit {\n\n  public errmessage = undefined;\n  public oldInsertion = { title: '', authors: [], edition: undefined, faculty: '', university: '', reserve_price: undefined, start_price: undefined, \n    expire_date: undefined, current_price: undefined , insertion_timestamp: undefined};\n  public insertion = { title: undefined, authors: [], edition: undefined, faculty: undefined, university: undefined, reserve_price: undefined, start_price: undefined, expire_date: undefined};\n  public authorInput\n\n  constructor(private ihs : InsertionHttpService, private router: Router, private route : ActivatedRoute, private uhs : UserHttpService) {}\n\n  ngOnInit() {\n    this.get_insertion();\n  }\n\n  public add_authors( tag: string ) {\n    this.insertion.authors = this.insertion.authors.concat([ tag]);\n  }\n\n  public get_today_date() {\n    return new Date();\n  }\n\n  public get_insertion() {\n    this.ihs.get_insertion(this.route.snapshot.params).subscribe(\n      (insertion : Insertion) => {\n        if (!insertion || insertion.closed || !this.uhs.get_token() || (this.uhs.get_id() != insertion.insertionist._id  && (!this.uhs.is_moderator() || !this.uhs.is_validated() )))\n          this.router.navigate(['**'])\n        else {\n          this.oldInsertion.title = insertion.title;\n          this.oldInsertion.authors = insertion.authors;\n          this.oldInsertion.edition = insertion.edition;\n          this.oldInsertion.faculty = insertion.faculty;\n          this.oldInsertion.university = insertion.university\n          this.oldInsertion.reserve_price = insertion.reserve_price;\n          this.oldInsertion.start_price = insertion.start_price;\n          this.oldInsertion.current_price = insertion.current_price;\n          this.oldInsertion.expire_date = insertion.expire_date;\n          this.oldInsertion.insertion_timestamp = insertion.insertion_timestamp\n\n          this.insertion.authors = this.oldInsertion.authors;\n        }\n      } , (err) => {\n        console.log(err)\n        this.router.navigate(['**'])\n      }\n    );\n  }\n\n  public edit_insertion () {\n    \n    this.insertion.edition = this.insertion.edition != undefined ? Number(this.insertion.edition) : undefined;\n    this.insertion.start_price = this.insertion.start_price != undefined ? Number(this.insertion.start_price) : undefined;\n    this.insertion.reserve_price = this.insertion.reserve_price != undefined ? Number(this.insertion.reserve_price) : undefined;\n\n    this.insertion.expire_date = this.insertion.expire_date != undefined ? new Date(this.insertion.expire_date) : undefined\n    \n    if (this.insertion.expire_date) {\n      this.insertion.expire_date = {\n        year: this.insertion.expire_date.getFullYear(),\n        month: this.insertion.expire_date.getMonth(),\n        day: this.insertion.expire_date.getDate(),\n        hours: this.insertion.expire_date.getHours(),\n        minutes: this.insertion.expire_date.getMinutes() \n      }\n    }\n\n    this.ihs.edit_insertion(this.route.snapshot.params, this.insertion).subscribe( (d) => {\n      console.log('Insertion Posted: ' + JSON.stringify(d) );\n      this.errmessage = undefined;\n      this.router.navigate(['/insertions/' + this.route.snapshot.params.id]);\n    }, (err) => {\n      console.log('Signup error: ' + JSON.stringify(err.error.errormessage) );\n      this.errmessage = err.error.errormessage || err.error.message;\n\n    });\n    \n  }\n\n  public are_start_and_reserve_price_compatible (start_price : number, reserve_price : number) {\n        return (reserve_price == undefined && start_price == undefined) ||\n        (reserve_price != undefined && start_price == undefined && reserve_price > this.oldInsertion.start_price) ||\n        (reserve_price == undefined && start_price != undefined  && this.oldInsertion.reserve_price > start_price) ||\n        (reserve_price != undefined && start_price != undefined && reserve_price > start_price)\n  }\n\n}\n","<div class=\"container\" style=\"width: 350px; margin-top: 20px;\" >\n    <form class=\"form\"  >\n      \n      <div class=\"text-center\">  \n        <i class=\"fas fa-book\" style=\"width: 50px; height: 50px;\"></i>\n        <h1 class=\"h3 mb-3 my-1 font-weight-normal\">Edit Insertion</h1>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"inputTitle\">Title</label>\n        <input type=\"text\" #title=\"ngModel\" name=\"title\" [(ngModel)]=\"insertion.title\" class=\"form-control\" id=\"inputTitle\" \n          placeholder=\"Enter title\">\n        <small>\n            * Current = {{oldInsertion.title}}\n        </small>\n      </div>\n\n      <div class=\"form-group\">\n        <label for= \"inputAuthors\">Authors</label>\n        <div class=\"input-group\">\n            <input type=\"text\" #authorname='ngModel' required name=\"authorname\" [(ngModel)]=\"authorInput\" class=\"form-control\" id=\"inputAuthors\" \n              placeholder=\"Add Authors...\">\n            &nbsp;\n            <button class=\"btn btn-outline-primary\" [disabled] = \"!authorname.valid\" \n              (click)=\"add_authors(authorname.value); authorInput = ''\">Add Author\n            </button>\n        </div>\n        <div class=\"col-md-auto\">\n          <span *ngFor=\"let author of insertion.authors; let i = index\" class=\"badge badge-secondary\">{{author}} \n            <span (click) = \"insertion.authors.splice(i,1)\">\n                <i class=\" bt fas fa-times-circle\"></i>\n            </span>\n          </span>\n        </div>\n      </div>\n\n      <div [hidden]=\"insertion.authors.length\"\n          class=\"alert alert-danger\">\n        Authors are required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputEdition\">Edition</label>\n        <input type=\"number\" #edition=\"ngModel\" pattern=\"\\d+\" name=\"edition\" [(ngModel)]=\"insertion.edition\" class=\"form-control\" id=\"inputEdition\" \n          placeholder=\"Enter Edition\" [value] ='insertion.edition'>\n        <small>\n            * Current = {{oldInsertion.edition}}\n        </small>\n      </div>\n    \n      <div [hidden]=\"edition.valid || edition.pristine\"\n          class=\"alert alert-danger\">\n        Edition is not valid\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputFaculty\">Faculty</label>\n        <input type=\"text\" #faculty=\"ngModel\" name=\"faculty\" [(ngModel)]=\"insertion.faculty\" class=\"form-control\" id=\"inputFaculty\" \n          placeholder=\"Enter Faculty\">\n        <small>\n            * Current = {{oldInsertion.faculty}}\n        </small>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"inputUniversity\">University</label>\n        <input type=\"text\" #university=\"ngModel\" name=\"university\" [(ngModel)]=\"insertion.university\" class=\"form-control\" id=\"inputUniversity\" \n          placeholder=\"Enter University\">\n        <small>\n            * Current = {{oldInsertion.university}}\n        </small>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputStartPrice\">Start Price</label>\n        <input [hidden] = \"oldInsertion.current_price != undefined\"  type=\"number\" #start_price=\"ngModel\" pattern=\"\\d+(\\.\\d{1,2})?\" name=\"start_price\" \n          [(ngModel)]=\"insertion.start_price\" class=\"form-control\" id=\"inputStartPrice\" placeholder=\"Enter Start Price\" >\n        <small>\n            * Current = {{oldInsertion.start_price | currency}}\n        </small>\n      </div>\n    \n      <div [hidden]=\"start_price.valid || start_price.pristine\"\n          class=\"alert alert-danger\">\n        Start Price is not valid\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputReservePrice\">Reserve Price</label>\n        <input type=\"number\" #reserve_price=\"ngModel\" pattern=\"\\d+(\\.\\d{1,2})?\"  name=\"reserve_price\" [(ngModel)]=\"insertion.reserve_price\" \n          class=\"form-control\" id=\"inputReservePrice\" placeholder=\"Enter Reserve Price\">\n        <small>\n            * Current = {{oldInsertion.reserve_price | currency}}\n        </small>\n      </div>\n    \n      <div [hidden]= \"are_start_and_reserve_price_compatible (start_price.value, reserve_price.value)\" class=\"alert alert-danger\">\n        Reserve Price must be greater than Start Price\n      </div>\n\n      <div [hidden]=\"reserve_price.valid || reserve_price.pristine\"\n          class=\"alert alert-danger\">\n        Reserve Price is not valid\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputExpireDate\">Expire Date</label>\n        <input type=\"datetime-local\" #expire_date = \"ngModel\" name=\"expire_date\" [(ngModel)]=\"insertion.expire_date\" class=\"form-control\" \n          id=\"inputExpireDate\" placeholder=\"Enter Expire Date\" min = \"{{get_today_date() | date: 'yyyy-MM-ddTHH:mm'}}\">\n        <small>\n            * Current = {{oldInsertion.expire_date  | date}} / {{oldInsertion.expire_date | date :'shortTime'}}\n        </small>\n      </div>\n    \n      <div [hidden]=\"expire_date.valid || expire_date.pristine\"\n          class=\"alert alert-danger\">\n        Expire Date is not Valid\n      </div>\n      \n      <div *ngIf=\"errmessage\" class=\"alert alert-danger\" role=\"alert\">\n        Post Insertion Error: {{errmessage}}\n      </div>\n\n       \n      <button class=\"btn btn-lg btn-primary btn-block\" \n        [disabled]=\"!are_start_and_reserve_price_compatible(start_price.value, reserve_price.value) || !reserve_price.valid || !start_price.valid || !expire_date.valid || !insertion.authors.length\"\n        (click)=\"edit_insertion();\">Edit</button>\n      <br>\n      <br>\n   \n    </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  public errmessage = undefined;\n  public user = { mail: undefined, password: undefined, username: undefined, location: undefined, name: undefined, surname: undefined};\n\n  constructor( public uhs: UserHttpService, public router: Router ) { }\n\n  ngOnInit() {\n    if (!this.uhs.get_token())\n      this.router.navigate(['**'])\n  }\n\n  getToken(){\n    return {\n      username: this.uhs.get_username(),\n      mail: this.uhs.get_mail(),\n      id: this.uhs.get_id(),\n      mod: this.uhs.is_moderator(),\n      validated: this.uhs.is_validated()\n    }\n  }\n\n  edit(){\n    this.uhs.edit( this.user ).subscribe( (d) => {\n      console.log('Registration ok: ' + JSON.stringify(d) );\n      this.errmessage = undefined;\n      this.router.navigate(['/insertions']);\n    }, (err) => {\n      console.log('Signup error: ' + JSON.stringify(err.error.errormessage) );\n      this.errmessage = err.error.errormessage || err.error.message;\n\n    });\n\n  }\n\n\n}\n","<div class=\"container\" style=\"width: 350px; margin-top: 20px;\" >\n\n    <form class=\"form-signin\">\n      \n      <div class=\"text-center\">  \n        <i class=\"fas fa-envelope loginlogo\" style=\"width: 50px; height: 50px;\"></i>\n        <h1 class=\"h3 mb-3 font-weight-normal\">Edit Profile</h1>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"inputEmail\">Email address</label>\n        <input type=\"email\" #mail=\"ngModel\" name=\"mail\" [(ngModel)]=\"user.mail\" pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\" class=\"form-control\" [required]= \"getToken().mod && !getToken().validated\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n      </div>\n    \n      <div [hidden]=\"mail.valid || mail.pristine\"\n          class=\"alert alert-danger\">\n        Mail is not valid\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"inputUsername\">Username</label>\n        <input type=\"text\" #username=\"ngModel\" [required]= \"getToken().mod && !getToken().validated\" name=\"username\" [(ngModel)]=\"user.username\" class=\"form-control\" id=\"inputUsername\" placeholder=\"Enter username\">\n      </div>\n    \n      <div [hidden]=\"username.valid || username.pristine\"\n          class=\"alert alert-danger\">\n        Username is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputPassword\">Password</label>\n        <input type=\"password\" #password=\"ngModel\" [required]= \"getToken().mod && !getToken().validated\" name=\"password\" [(ngModel)]=\"user.password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\">\n      </div>\n    \n      <div [hidden]=\"password.valid || password.pristine\"\n          class=\"alert alert-danger\">\n        Password is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" #name=\"ngModel\" [required]= \"getToken().mod && !getToken().validated\" name=\"name\" [(ngModel)]=\"user.name\" class=\"form-control\" id=\"inputName\" placeholder=\"Enter name\">\n      </div>\n    \n      <div [hidden]=\"name.valid || name.pristine\"\n          class=\"alert alert-danger\">\n        Name is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputSurname\">Surname</label>\n        <input type=\"text\" #surname=\"ngModel\" [required]= \"getToken().mod && !getToken().validated\" name=\"surname\" [(ngModel)]=\"user.surname\" class=\"form-control\" id=\"inputSurname\" placeholder=\"Enter surname\">\n      </div>\n    \n      <div [hidden]=\"surname.valid || surname.pristine\"\n          class=\"alert alert-danger\">\n        Surname is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputLocation\">Location</label>\n        <input type=\"text\" #location=\"ngModel\" [required]= \"getToken().mod && !getToken().validated\" name=\"location\" [(ngModel)]=\"user.location\" class=\"form-control\" id=\"inputLocation\" placeholder=\"Enter location\">\n      </div>\n    \n      <div [hidden]=\"location.valid || location.pristine\"\n          class=\"alert alert-danger\">\n        Location is required\n      </div>  \n    \n      <div *ngIf=\"errmessage\" class=\"alert alert-danger\" role=\"alert\">\n        Edit Error: {{errmessage}}\n      </div>\n    \n      <button class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"getToken().mod && !getToken().validated && (!mail.valid || !password.valid || !username.valid || !name.valid || !surname.valid || !location.valid)\" (click)=\"edit();\">Edit</button>\n      <br>\n      <br>\n    </form>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { SocketioService } from '../../Services/socketio.service';\nimport { InsertionHttpService } from '../../Services/insertion-http.service';\nimport { Insertion } from '../../Objects/Insertion';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-insertion-list',\n  templateUrl: './insertion-list.component.html',\n  styleUrls: ['./insertion-list.component.css']\n})\nexport class InsertionListComponent implements OnInit, OnDestroy {\n\n\n  public insertions: Insertion[]\n  private interval\n  private subscriptions : Subscription = new Subscription()\n\n\n  constructor( private sio: SocketioService , public ihs: InsertionHttpService, private router: Router , private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.get_insertions(this.route.snapshot.queryParams);\n    this.subscriptions.add(this.sio.connect().subscribe( (m) => {\n      this.get_insertions(this.route.snapshot.queryParams)\n    }));\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval)\n    this.subscriptions.unsubscribe()\n  }\n\n  public get_insertions(params? : any) {\n    this.ihs.get_insertions(params).subscribe(\n      ( insertions ) => {\n        clearInterval(this.interval)\n        this.insertions = insertions;\n\n\n        this.insertions.forEach(elem => {\n          elem.remaining_time = this.getRemainingTime(elem)\n        })\n\n        this.interval = setInterval( () => {\n          var available = 0\n          this.insertions.forEach(elem => {\n            elem.remaining_time = this.getRemainingTime(elem)\n            if (!elem.remaining_time) {\n              elem.closed = true;\n            }\n            else\n              available++;\n          })\n          if (!available) {\n            clearInterval(this.interval)\n          }\n        }, 1000)\n      } , (err) => {\n        console.log(err)\n      }\n    );\n  }\n\n  private getRemainingTime(insertion : Insertion) {\n    const date1 = new Date()\n    const date2 = new Date(insertion.expire_date)\n    const diffTime = date2.getTime() - date1.getTime();\n\n    if (diffTime <= 0)\n      return undefined\n\n    var seconds = Math.floor(diffTime / 1000);\n    var minutes = Math.floor(seconds / 60);\n    var hours = Math.floor(minutes / 60);\n    var days = Math.floor(hours / 24);\n\n    hours %= 24\n    minutes %= 60;\n    seconds %= 60;\n\n    return days + 'd ' + hours + 'h ' + minutes + 'm ' + seconds + 's'\n  }\n\n  search(title: string, faculty: string, university: string, location: string, user: string, price: string) {\n    var params = {\n      title: title.length?title:undefined,\n      faculty: faculty.length?faculty:undefined,\n      university: university.length?university:undefined,\n      location: location.length?location:undefined,\n      user: user.length?user:undefined,\n      price: price.length?price:undefined\n    }\n    this.router.navigate(['/insertions'], { queryParams: params });\n \n   };\n \n\n}\n","<div class = 'card' style=\"margin: 5px; border-color: grey\" >\n  <div class=\"card-body\">\n\n    <h2 class=\"card-title text-center\">\n      <span style=\"font-weight: bold;\">Search Insertions </span>\n    </h2>\n\n    <form class=\" ml-auto mr-auto\"> \n      <div class=\"form-row\">\n        <div class=\"col\"> \n          Filters: \n        </div> \n      </div> \n      <div class=\"form-row\"> \n        <div class=\"col\"> \n          <input type=\"text\" #title class=\"form-control\" placeholder=\"Title\"> \n        </div> \n        <div class=\"col\"> \n          <input type=\"text\" #faculty class=\"form-control\" placeholder=\"Faculty\"> \n        </div> \n        <div class=\"col\"> \n          <input type=\"text\" #university class=\"form-control\" placeholder=\"University\"> \n        </div> \n      </div>\n      <div class=\"form-row\">\n        <div class=\"col\"> \n          <input type=\"text\" #location class=\"form-control\" placeholder=\"Location\"> \n        </div> \n        <div class=\"col\"> \n          <input type=\"text\" #user class=\"form-control\" placeholder=\"User\"> \n        </div> \n        <div class=\"col\"> \n          <input type=\"number\" #price class=\"form-control\" placeholder=\"Price\"> \n        </div>  \n      </div>\n      <div class=\"form-row\">\n        <div class=\"col\"> \n          <button class=\"btn btn-outline-success my-2 my-sm-2\" type=\"submit\" (click) = \"search(title.value, faculty.value, university.value, location.value, user.value, price.value); \n          title.value=''; faculty.value=''; university.value=''; location.value=''; user.value=''; price.value='';\">Search</button> \n        </div> \n      </div>\n    </form>\n  </div>\n</div>\n\n<div *ngIf=\"insertions && !insertions.length\" class=\"container text-center my-4\">\n  <h3>No results found</h3>\n</div>\n\n<div *ngFor=\"let insertion of insertions\" [ngStyle]=\"{'background-color': insertion.closed ? 'rgb(245, 175, 158)' : 'rgb(191, 238, 191)'}\"\n     [ngClass]=\"{'border-success': !insertion.closed, 'border-danger': insertion.closed}\" class=\"card\" style=\"margin: 5px;\" > \n    <div [ngClass]=\"{'bg-success': !insertion.closed, 'bg-danger': insertion.closed}\" class=\"card-header p-3 mb-2 text-black\"></div>\n    <div class=\"card-body\">\n\n\t    <h2 class=\"card-title\"><i class=\"fa fa-book\"></i>&nbsp;{{insertion.title}}\n\t      <button class =\"btn btn-outline-dark text-align-right\" \n\t      [routerLink]=\"['/insertions', insertion._id]\" >\n\t      <span style=\"font-weight: bold;\">Open</span>\n\t      </button>\n\t  \t</h2>\n\n\t    <h4 class=\"card-subtitle mb-2\"> {{insertion.authors.join(', ')}}</h4>\n\t    <p class=\"card-subtitle mb-2 my-1\"> <span style=\"font-weight: bold;\">Edition:</span> &nbsp;{{insertion.edition}}</p> \n\t    \n\t    <p class=\"card-subtitle\">\n\t      <span style=\"font-weight: bold;\">Current price:</span>\n\t      {{ (insertion.current_price ? insertion.current_price : 0) | currency}}\n\t    </p>\n\t    <p *ngIf='!insertion.closed' class=\"card-subtitle mb-2 my-1\"> <span style=\"font-weight: bold;\">Remaining time:</span> {{ insertion.remaining_time }}</p>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { SocketioService } from '../../Services/socketio.service';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { InsertionHttpService } from '../../Services/insertion-http.service';\nimport { Insertion } from '../../Objects/Insertion';\nimport { isIosInsertion, isIosMessage } from '../../Objects/IosObject' \nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-insertion',\n  templateUrl: './insertion.component.html',\n  styleUrls: ['./insertion.component.css']\n})\nexport class InsertionComponent implements OnInit, OnDestroy {\n\n  public insertion: Insertion;\n  public errmessage = undefined;\n  private interval\n  private subscriptions : Subscription = new Subscription()\n\n  constructor( private sio: SocketioService , public ihs: InsertionHttpService, public uhs: UserHttpService, private router: Router , private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.get_insertion();\n    this.subscriptions.add(this.sio.connect().subscribe( (m) => {\n      if ((isIosInsertion(m) && m.id == this.insertion._id) || (isIosMessage(m) && m.insertion==this.insertion._id)){\n        this.get_insertion();\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval)\n    this.subscriptions.unsubscribe()\n  }\n\n  public get_insertion() {\n    this.ihs.get_insertion(this.route.snapshot.params).subscribe(\n      ( insertion ) => {\n        clearInterval(this.interval)\n        if (!insertion)\n          this.router.navigate(['**'])\n        else {\n          this.insertion = insertion;\n          this.insertion.remaining_time = this.getRemainingTime()\n          if (this.insertion.remaining_time) {\n            this.interval = setInterval(() => {\n              this.insertion.remaining_time = this.getRemainingTime()\n              if (!this.insertion.remaining_time) {\n                this.insertion.closed = true;\n                clearInterval(this.interval)\n              }\n            }, 1000)\n          }\n          else {\n            this.insertion.closed = true\n          }\n        }\n      } , (err) => {\n        console.log(err)\n        this.router.navigate(['**'])\n      }\n    );\n  }\n\n\n  private getRemainingTime() {\n    const date1 = new Date()\n    const date2 = new Date(this.insertion.expire_date)\n    const diffTime = date2.getTime() - date1.getTime();\n\n    if (diffTime <= 0)\n      return undefined\n\n    var seconds = Math.floor(diffTime / 1000);\n    var minutes = Math.floor(seconds / 60);\n    var hours = Math.floor(minutes / 60);\n    var days = Math.floor(hours / 24);\n\n    hours %= 24\n    minutes %= 60;\n    seconds %= 60;\n\n    return days + 'd ' + hours + 'h ' + minutes + 'm ' + seconds + 's'\n  }\n\n  public get_current_winner(): string{\n    return this.insertion.current_winner ? this.insertion.current_winner.username : 'None';;\n  }\n\n  public get_current_price(): number{\n    return this.insertion.current_price != null ? this.insertion.current_price : 0;\n  }\n\n  public put_price(price: number){\n    this.ihs.put_price(this.route.snapshot.params,Number(price)).subscribe(\n      ( data ) => {\n        this.errmessage = undefined;\n        this.get_insertion();\n      } , (err) => {\n        this.errmessage = err.error.errormessage || err.error.message;\n      }\n    );\n  }\n\n  hasToken(): boolean {\n    return this.uhs.get_token()!= undefined\n  }\n\n  getToken(){\n    return {\n      username: this.uhs.get_username(),\n      mail: this.uhs.get_mail(),\n      id: this.uhs.get_id(),\n      mod: this.uhs.is_moderator(),\n      validated: this.uhs.is_validated()\n    }\n  }\n\n  public delete_insertion() {\n    if(confirm(\"Do you really want to delete this insertion?\")) {\n      this.ihs.delete_insertion (this.route.snapshot.params).subscribe(\n        () => {\n          this.router.navigate(['/insertions'])\n        }\n      );\n    }\n  }\n\n  checkIsInsertionist(){\n    return this.hasToken() && this.insertion && this.insertion.insertionist && (this.getToken().id == this.insertion.insertionist._id);\n  }\n}\n","<div *ngIf = 'insertion' [ngClass]=\"{'border-success': !insertion.closed, 'border-danger': insertion.closed}\" class=\"card mb-3\" style=\"margin: 5px;\" \n[ngStyle]=\"{'background-color': insertion.closed ? 'rgb(245, 175, 158)' : 'rgb(191, 238, 191)'}\"> \n\n    <div [ngClass]=\"{'bg-success': !insertion.closed, 'bg-danger': insertion.closed}\" class=\"card-header p-3 mb-2 text-black\">\n        <h6 *ngIf='!insertion.closed' class =\"float-left font-weight-bold\">OPEN</h6>\n        <h6 *ngIf='insertion.closed' class =\"float-left font-weight-bold\">CLOSED</h6>\n        <h6 *ngIf='!insertion.closed' class =\"float-right text-align-right\"><b class = \"font-weight-bold\">Remaining time: </b>{{ insertion.remaining_time }}</h6>\n    </div>\n\n    <div class=\"card-body\">\n\n        <h2 class=\"card-title\"><i class=\"fa fa-book\"></i>&nbsp;{{insertion.title}}\n            <button class =\"btn btn-outline-dark text-align-right\" \n            *ngIf=\"!insertion.closed && hasToken() && ((getToken().mod && getToken().validated) || getToken().id == insertion.insertionist._id)\" \n            [routerLink]=\"['/editinsertion', insertion._id]\" >\n                <i class=\"fa fa-edit\"></i>\n            </button>\n            <button class =\"btn btn-outline-dark text-align-right\" \n            *ngIf=\"hasToken() && getToken().mod && getToken().validated\" \n            (click) = \"delete_insertion()\">\n                <i class=\"fa fa-trash\"></i>\n            </button>\n        </h2>\n        <h4 class=\"card-subtitle mb-2\"> {{insertion.authors.join(', ')}}</h4>\n        <p class=\"card-subtitle mb-2 my-1\"> <span style=\"font-weight: bold;\">Edition:</span> &nbsp;{{insertion.edition}}</p> \n        <p class=\"card-subtitle mb-2\"><span style=\"font-weight: bold;\">Faculty:</span> &nbsp;{{ insertion.faculty }}</p>\n        <p class=\"card-subtitle mb-2\"><span style=\"font-weight: bold;\">University:</span> &nbsp;{{ insertion.university }}</p>\n        <br>\n        <p class=\"card-subtitle mb-2\"><span style=\"font-weight: bold;\">By:</span> &nbsp; {{insertion.insertionist ? insertion.insertionist.username : 'Deleted user'}}&nbsp;<i class=\"far fa-user-circle\"></i></p> \n        <p *ngIf = 'insertion.insertionist' class=\"card-subtitle mb-2\"><span style=\"font-weight: bold;\">From:</span> &nbsp;{{insertion.insertionist.location}}</p> \n        <p class=\"card-subtitle text-muted mb-2\"><i class=\"far fa-clock\"></i>&nbsp;{{insertion.insertion_timestamp | date}} / {{insertion.insertion_timestamp | date:'shortTime'}}</p>\n        <br><br>\n        <p class=\"card-subtitle\"><span style=\"font-weight: bold;\">Current winner:</span> {{ get_current_winner() }}</p><br><br>\n        <p class=\"card-subtitle text-center text-muted mb-2\"><span style=\"font-weight: bold;\">Start price:</span> {{ insertion.start_price | currency }}</p>\n        <p class=\"card-subtitle text-center\"><span style=\"font-weight: bold;\">Current price:</span> {{ get_current_price() | currency }}</p>\n        <p *ngIf=\"hasToken() && ((getToken().mod && getToken().validated) || getToken().id == insertion.insertionist._id)\" class=\"card-subtitle text-center my-1\"><span style=\"font-weight: bold;\">Reserve price:</span> {{ insertion.reserve_price | currency }}</p>\n\n        <div *ngIf=\"!insertion.closed && hasToken() && !getToken().mod && getToken().id != insertion.insertionist._id\" class=\"form-group text-center\">\n            <input type=\"number\" #price required name=\"price\" class=\"form-control text-center my-1\" style=\"width: 200px; margin:auto;\" placeholder=\"Enter price\">\n    \n            <div *ngIf=\"errmessage\" class=\"alert alert-danger\" role=\"alert\" style=\"width: 200px; margin:auto;\" >\n                Error: {{errmessage}}\n            </div>\n            \n            <button class='btn btn-outline-success my-2 my-sm-2'(click)=\"put_price(price.value); price.value='';\">Bet</button>\n        </div>\n\n\n\n    </div>\n</div>\n\n<div *ngIf = 'insertion'>\n\n    <app-message-post *ngIf = 'hasToken()' [isAnswer]=\"false\" [isInsertionist]=\"checkIsInsertionist()\" (posted)=\"get_insertion()\"></app-message-post>\n    <h4 *ngIf = 'insertion.messages.length' class=\"font-weight-bold mb-3\" style=\"margin: 3px;\">Questions and Answers:</h4>\n\n    <div *ngFor = \"let message of insertion.messages\" class = \"card mb-3 border-dark\" style=\"margin: 3px; background-color: rgb(246, 241, 190)\" >\n        <div class=\"container\">\n            <div class=\"card-body mr-2 ml-2\">\n                <button *ngIf = 'hasToken()' type=\"submit\" class=\"btn btn-outline-dark float-right text-align-right\" routerLink=\"/insertions/{{insertion._id}}/public_message/{{message._id}}\">\n                    Reply <i class=\"fa fa-reply\"></i>\n                </button>  \n                <h5 class=\"card-title\"><i class=\"fa fa-user\"></i>&nbsp;{{message.author ? message.author.username : 'Deleted user'}}</h5>      \n                <h6 class=\"card-subtitle mb-2 text-muted\">{{message.timestamp | date}} / {{message.timestamp | date:'shortTime'}}</h6>\n                <p class=\"card-text\">{{ message.content }}</p>\n                <h6 *ngIf = 'message.responses.length' class=\"font-weight-bold\" style=\"margin-left: 25px;\">Answers:</h6>\n                <span *ngFor=\"let response of message.responses\" class=\"card mb-3 border-dark\" style=\"margin-left: 25px;\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"><i class=\"fa fa-user\"></i>&nbsp;{{response.author ? response.author.username : 'Deleted user'}}</h5>        \n                        <h6 class=\"card-subtitle mb-2 text-muted\">{{response.timestamp | date}} / {{response.timestamp | date:'shortTime'}}</h6>\n                        <p class=\"card-text\">{{ response.content }}</p>\n                    </div>\n                </span>\n            </div>\n        </div>\n    </div>\n\n\n</div>\n\n \n \n","import { Component, OnInit } from '@angular/core';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { NotificationHttpService } from '../../Services/notification-http.service';\nimport { PrivateChatHttpService } from '../../Services/private-chat-http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public errmessage = undefined;\n  constructor( private uhs: UserHttpService, private router: Router, private nhs : NotificationHttpService, private pchs : PrivateChatHttpService  ) { }\n\n  ngOnInit(): void { }\n\n  login( mail: string, password: string) {\n    this.uhs.login( mail, password).subscribe( (d) => {\n      console.log('Login granted: ' + JSON.stringify(d) );\n      console.log('User service token: ' + this.uhs.get_token() );\n      this.errmessage = undefined;\n      this.nhs.set_notifications_state_after_login()\n      this.pchs.set_chats_state_after_login()\n      if(this.uhs.is_moderator() && !this.uhs.is_validated())\n        this.router.navigate(['/editprofile'])\n      else \n        this.router.navigate(['/insertions'])\n    }, (err) => {\n      console.log('Login error: ' + JSON.stringify(err.error) );\n      this.errmessage = err.error;\n    });\n\n  }\n\n}\n","<div class=\"container\" style=\"width: 350px; margin-top: 20px;\" >\n    <div class=\"form-signin text-center loginform \">\n      <i class=\"fa fa-envelope loginlogo\" style=\"width: 50px; height: 50px;\"></i>\n  \n      <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n  \n      <label for=\"inputEmail\" class=\"sr-only\">Username or Email address</label>\n      <input type=\"text\" #mailtxt id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n      \n      <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n      <input type=\"password\" #passwdtxt id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n      \n      <div *ngIf=\"errmessage\" class=\"alert alert-danger\" role=\"alert\">\n        Login error: {{errmessage}}\n      </div>\n      \n      <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"login( mailtxt.value, passwdtxt.value);\" >Sign in</button>\n      <br>\n      <br>\n\n    </div>\n</div>\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { Message } from '../../Objects/Message';\nimport { InsertionHttpService } from '../../Services/insertion-http.service';\nimport { PrivateChatHttpService } from '../../Services/private-chat-http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-message-post',\n  templateUrl: './message-post.component.html',\n  styleUrls: ['./message-post.component.css']\n})\n\nexport class MessagePostComponent implements OnInit {\n\n  constructor( private ihs: InsertionHttpService, private route : ActivatedRoute, private pchs: PrivateChatHttpService, private router : Router) { }\n\n  public message : string;\n  public error = undefined;\n  @Input() public isAnswer : boolean;\n  @Input() public isInsertionist : boolean;\n\n  @Output() posted = new EventEmitter<Message>();\n\n  ngOnInit() {\n    this.set_empty();\n  }\n\n  set_empty() {\n    this.message = '';\n  }\n\n  post_message(check?:boolean) {\n    if(check)\n      this.pchs.post_chat(this.message,this.route.snapshot.params.id).subscribe( (m) => {\n        console.log('Message posted');\n        this.error = undefined\n        this.set_empty();\n        this.router.navigate(['/private_chats/' + m.id])\n      }, (error) => {\n        console.log('Error occurred while posting: ' + error);\n        this.error = 'Error occurred while posting: ' + error\n      });\n    else{\n      this.ihs.put_message( this.route.snapshot.params, this.message ).subscribe( (m) => {\n        console.log('Message posted');\n        this.error = undefined\n        this.set_empty();\n        this.posted.emit( m );\n      }, (error) => {\n        console.log('Error occurred while posting: ' + error);\n        this.error = 'Error occurred while posting: ' + error\n      });\n    }\n  }\n  \n}\n\n","<div class=\"jumbotron mb-3 py-4\">\n    <div class=\"container\">\n        <h3>Post new message</h3>\n        <div class=\"form-group my-3\">\n            <textarea class=\"form-control\" [(ngModel)]=\"message\" #messagetx id=\"messagetext\" \n                rows=\"3\" placeholder=\"Enter your message here\">\n            </textarea>\n        </div>\n        <div *ngIf=\"!isAnswer && !isInsertionist\">\n            <div class=\"checkbox ml-1\">\n              <input #check type=\"checkbox\">\n              <label for=\"checkbox\"> &nbsp; Post as private message</label>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"post_message(check.checked)\">\n                Post <i class=\"fas fa-paper-plane\"></i>\n            </button>\n        </div>\n        <button *ngIf=\"isAnswer || isInsertionist\" type=\"submit\" class=\"btn btn-primary\" (click)=\"post_message()\">\n            Post <i class=\"fas fa-paper-plane\"></i>\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { InsertionHttpService } from '../../Services/insertion-http.service';\nimport { Insertion } from '../../Objects/Insertion';\nimport { Message } from '../../Objects/Message';\n\n@Component({\n  selector: 'app-message-reply',\n  templateUrl: './message-reply.component.html',\n  styleUrls: ['./message-reply.component.css']\n})\nexport class MessageReplyComponent implements OnInit {\n\n  public insertion : Insertion\n  public message : Message\n  constructor( public ihs: InsertionHttpService, public uhs: UserHttpService, private router: Router , private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    if (this.uhs.get_token())\n      this.get_insertion()\n    else\n      this.router.navigate(['**'])\n  }\n\n  public get_insertion() {\n    this.ihs.get_insertion(this.route.snapshot.params).subscribe(\n      ( insertion ) => {\n        if (!insertion)\n          this.router.navigate(['**'])\n        else {\n          this.insertion = insertion;\n          this.get_message();\n        }\n      } , (err) => {\n        console.log(err)\n        this.router.navigate(['**'])\n      }\n    );\n  }\n\n  public get_message() {\n    this.message = this.insertion.messages.find((element)=>{return element._id==this.route.snapshot.params.m_id})\n    if(!this.message) {\n      console.log(\"Not Found\")\n      this.router.navigate(['**'])\n    }\n\n  }\n\n  public returnToInsertion(){\n    this.router.navigate(['/insertions/'+this.route.snapshot.params.id])\n  }\n\n}\n","<div *ngIf=\"message\" class = \"card mb-3 border-dark\" style=\"margin: 3px; background-color: rgb(246, 241, 190)\" >\n    <div class=\"container\">\n        <div class=\"card-body mr-2 ml-2\">\n            <h5 class=\"card-title\"><i class=\"fa fa-user\"></i>&nbsp;{{message.author ? message.author.username : 'deleted user'}}</h5>      \n            <h6 class=\"card-subtitle mb-2 text-muted\">{{message.timestamp | date}} / {{message.timestamp | date:'shortTime'}}</h6>\n            <p class=\"card-text\">{{ message.content }}</p>\n        </div>\n    </div>\n</div>\n<app-message-post [isAnswer]=\"true\" (posted)=\"returnToInsertion()\"></app-message-post>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { NotificationHttpService } from '../../Services/notification-http.service';\nimport { PrivateChatHttpService } from '../../Services/private-chat-http.service';\nimport { SocketioService } from '../../Services/socketio.service';\nimport { isIosNotification, isIosUserDeleted, isIosPrivateChatList } from '../../Objects/IosObject' \nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\n  public notificationsCount : number\n  public chatsCount : number\n  private subscriptions : Subscription = new Subscription()\n\n  constructor(private router: Router, private uhs: UserHttpService, private nhs : NotificationHttpService, private sio : SocketioService, private pchs : PrivateChatHttpService) { }\n\n  ngOnInit(): void {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false //ricarica nuovamente la pagina\n    if(this.uhs.get_token()) {\n      this.getUnreadNotificationsCount()\n      this.getUnreadChatsCount()\n    }\n    \n    this.subscriptions.add(this.nhs.notificationsState.subscribe(() => this.getUnreadNotificationsCount()))\n    this.subscriptions.add(this.pchs.chatsState.subscribe(() => this.getUnreadChatsCount() ))\n\n    this.subscriptions.add(\n      this.sio.connect().subscribe( (m) => {\n        if (this.hasToken() && isIosNotification(m) && m.user == this.getToken().id )\n          this.getUnreadNotificationsCount()\n\n        else if (isIosPrivateChatList(m) && m.users.includes(this.uhs.get_id() ))\n          this.getUnreadChatsCount();\n\n        else if( this.hasToken() && isIosUserDeleted(m) && m.id == this.getToken().id)\n          this.logout()\n      })\n    )\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe()\n  }\n\n  public getUnreadNotificationsCount() {\n    this.nhs.get_unread_notifications_count().subscribe(\n      ( notificationsCount ) => {\n        this.notificationsCount = notificationsCount;\n      } , (err) => {\n        console.log(err)\n        this.notificationsCount = 0;\n      }\n    );\n  }\n\n  public getUnreadChatsCount() {\n    this.pchs.get_unread_chats_count().subscribe(\n      ( chatsCount ) => {\n        this.chatsCount = chatsCount;\n      } , (err) => {\n        console.log(err)\n        this.chatsCount = 0;\n      }\n    );\n  }\n\n  hasToken(): boolean {\n    return this.uhs.get_token()!= undefined\n  }\n\n  getToken(){\n    return {\n      username: this.uhs.get_username(),\n      mail: this.uhs.get_mail(),\n      id: this.uhs.get_id(),\n      mod: this.uhs.is_moderator(),\n      validated: this.uhs.is_validated()\n    }\n  }\n\n  logout(){\n    this.uhs.logout();\n    this.notificationsCount = undefined\n    this.chatsCount = undefined\n    this.router.navigate(['/insertions']);\n  }\n\n}\n","<div class = 'sticky-top' data-toggle = 'affix'>\n  <mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark bg-primary\" >\n    <mdb-navbar-brand><a class=\"navbar-brand\" routerLink=\"/insertions\" >Auction Website</a></mdb-navbar-brand>\n\n    <links>      \n        <ul *ngIf=\"hasToken()\" class=\"navbar-nav ml-auto nav-flex-icons\">    \n          <li class=\"nav-item my-2\" style=\"color: #FFFF;\">\n              Welcome {{getToken().username}}! &nbsp;\n          </li>\n\n          <li class=\"nav-item my-2 mr-3\" style=\"color: #FFFF;\">\n            <a routerLink = '/notifications' class=\"waves-light\">\n              <span class = \"fa-layers fa-fw\">\n                <i class=\"fas fa-envelope\"  style=\"color: #FFFF;\"></i>\n                <span *ngIf = 'notificationsCount' class=\"fa-layers-counter\" style=\"background:Tomato; font-size: 25px;\"></span>\n              </span>\n            </a>\n          </li>\n\n          <li class=\"nav-item my-2 mr-2\" style=\"color: #FFFF;\">\n            <a routerLink = '/private_chats' class=\"waves-light\">\n              <span class = \"fa-layers fa-fw\">\n                <i class=\"fa fa-comments\"  style=\"color: #FFFF;\"></i>\n                <span *ngIf = 'chatsCount' class=\"fa-layers-counter\" style=\"background:Tomato; font-size: 25px;\"></span>\n              </span>\n            </a>\n          </li>\n\n          <li class=\"nav-item dropdown\" dropdown>\n            <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\">\n              <i class=\"fa fa-user\"></i><span class=\"caret\"></span>\n            </a>\n            <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right dropdown-primary\" role=\"menu\">\n\n                <div *ngIf=\"errmessage\">\n                  Login error: {{errmessage}}\n                </div>\n\n                <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"logout()\">Logout</a>\n                <a class=\"dropdown-item waves-light\" mdbWavesEffect routerLink=\"/editprofile\">Edit profile</a>\n                <a *ngIf=\"!getToken().mod\" class=\"dropdown-item waves-light\" mdbWavesEffect routerLink=\"/postinsertion\">Post a new Insertion</a>\n                <a *ngIf=\"getToken().mod && getToken().validated\" class=\"dropdown-item waves-light\" mdbWavesEffect routerLink=\"/userlist\">Users List</a>\n                <a *ngIf=\"getToken().mod && getToken().validated\" class=\"dropdown-item waves-light\" mdbWavesEffect routerLink=\"/signupmod\">Sign up new Mod</a>\n                <span *ngIf=\"!getToken().mod || getToken().validated\">\n                  <div class=\"divider dropdown-divider\"></div>\n                  <a class=\"dropdown-item waves-light\" mdbWavesEffect routerLink=\"/userstats\">Stats</a>\n                </span>\n              </div>\n          </li>\n        </ul>\n\n      <ul *ngIf=\"!hasToken()\" class=\"navbar-nav ml-auto nav-flex-icons\">    \n          <li class=\"nav-item my-2\" style=\"color: #FFFF;\">\n          <a routerLink=\"/login\" style=\"color: #FFFF;\">Login </a> &nbsp; | &nbsp;\n          <a routerLink=\"/signup\" style=\"color: #FFFF;\">Sign up</a>\n        </li>\n      </ul>\n    </links>\n    \n  </mdb-navbar>\n</div>\n    ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { SocketioService } from '../../Services/socketio.service';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { NotificationHttpService } from '../../Services/notification-http.service';\nimport { Notification } from '../../Objects/Notification';\nimport { isIosNotification } from '../../Objects/IosObject' \nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit, OnDestroy {\n\n  public notifications : Notification[]\n  private subscriptions : Subscription = new Subscription()\n\n  constructor( private sio: SocketioService, public nhs: NotificationHttpService, public uhs: UserHttpService, private router: Router) { }\n\n\n  ngOnInit(): void {\n    if (!this.uhs.get_token())\n      this.router.navigate(['**'])\n    else {\n      this.get_notifications();\n      this.subscriptions.add(this.sio.connect().subscribe( (m) => {\n        if ((isIosNotification(m) && this.uhs.get_token() && m.user == this.uhs.get_id())){\n          this.get_notifications();\n        }\n      }));\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe()\n  }\n\n  public get_notifications() {\n    this.nhs.get_notifications().subscribe(\n      ( notifications ) => {\n        this.notifications = notifications;\n      } , (err) => {\n        console.log(err)\n      }\n    );\n  }\n\n  public goToInsertion(notif : Notification){\n    var link = notif.insertion ? '/insertions/' + notif.insertion._id : '**'\n    this.router.navigate([link]).then(()=>{\n      this.nhs.put_notification_read(notif._id).subscribe(\n        (err) => {\n          console.log(err)\n        }\n      );\n    });\n  }\n\n  public isRead(notif:Notification){\n    return notif.read;\n  }\n\n  public get_insertion(notif:Notification) {\n    return notif.insertion\n  }\n}\n","<div class=\"container\" style=\"margin-top: 20px;\" >\n\n    <div>  \n        <h1 class=\"h3 mb-3 font-weight-normal\">Notifications</h1>\n    </div>\n\n    <div *ngIf=\"notifications && !notifications.length\" class=\"container text-center my-4\">\n        <h3>No notifications to show</h3>\n    </div>\n\n    <div *ngFor=\"let notif of notifications\" (click)=\"goToInsertion(notif)\" class=\"card\" style=\"margin: 5px; cursor:pointer;\" [ngStyle]=\"{'background-color': !isRead(notif) ? 'rgb(241, 234, 148)' : ''}\"> \n        <div class=\"card-body\">\n            <h4 class=\"card-subtitle mb-2\">\n                <span *ngIf = '!get_insertion(notif)'  style=\"color: tomato\">Insertion Deleted</span>\n                <span *ngIf = 'get_insertion(notif)' class=\"text-muted\">{{notif.insertion.title}}</span>\n                <small class=\"float-right text-align-right text-muted my-2\" style= \"font-size: 60%;\">\n                    <i class=\"far fa-clock\"></i>&nbsp;\n                    {{notif.timestamp  | date}} / {{notif.timestamp  | date:'shortTime'}} \n                </small>\n            </h4>\n            <p>{{notif.content}}</p>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container text-center my-4\">\n    <h1 class>Ops!</h1>\n    <h2 class>Page Not Found!</h2>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { InsertionHttpService } from '../../Services/insertion-http.service';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-post-insertion',\n  templateUrl: './post-insertion.component.html',\n  styleUrls: ['./post-insertion.component.css']\n})\nexport class PostInsertionComponent implements OnInit {\n\n  public errmessage = undefined;\n  public insertion = { title: '', authors: [], edition: undefined, faculty: '', university: '', reserve_price: undefined, start_price: undefined, expire_date: undefined};\n  public authorInput\n\n  constructor(private ihs : InsertionHttpService, private router: Router, private uhs : UserHttpService) { }\n\n  ngOnInit(): void {\n    if (!this.uhs.get_token() || this.uhs.is_moderator() )\n      this.router.navigate(['**'])\n  }\n\n  public add_authors( tag: string ) {\n    this.insertion.authors = this.insertion.authors.concat([ tag]);\n  }\n\n  public get_today_date() {\n    return new Date()\n  }\n\n  post_insertion() {\n    this.insertion.edition = Number(this.insertion.edition);\n    this.insertion.start_price = Number(this.insertion.start_price);\n    this.insertion.reserve_price = Number(this.insertion.reserve_price);\n\n    this.insertion.expire_date = new Date(this.insertion.expire_date)\n    this.insertion.expire_date = {\n      year: this.insertion.expire_date.getFullYear(),\n      month: this.insertion.expire_date.getMonth(),\n      day: this.insertion.expire_date.getDate(),\n      hours: this.insertion.expire_date.getHours(),\n      minutes: this.insertion.expire_date.getMinutes() \n\n    }\n\n\n    this.ihs.post_insertion(this.insertion).subscribe( (d) => {\n      console.log('Insertion Posted: ' + JSON.stringify(d) );\n      this.errmessage = undefined;\n      this.router.navigate(['/insertions/' + d.id]);\n    }, (err) => {\n      console.log('Signup error: ' + JSON.stringify(err.error.errormessage) );\n      this.errmessage = err.error.errormessage || err.error.message;\n\n    });\n  }\n\n}\n","<div class=\"container\" style=\"width: 350px; margin-top: 20px;\" >\n\n    <form class=\"form\"  >\n      \n      <div class=\"text-center\">  \n        <i class=\"fas fa-book\" style=\"width: 50px; height: 50px;\"></i>\n        <h1 class=\"h3 mb-3 my-1 font-weight-normal\">Post a new Insertion</h1>\n      </div>\n    \n    \n      <div class=\"form-group\">\n        <label for=\"inputTitle\">Title</label>\n        <input type=\"text\" #title=\"ngModel\" required name=\"title\" [(ngModel)]=\"insertion.title\" class=\"form-control\" id=\"inputTitle\" placeholder=\"Enter title\">\n      </div>\n    \n      <div [hidden]=\"title.valid || title.pristine\"\n          class=\"alert alert-danger\">\n        Title is required\n      </div>\n\n\n      <div class=\"form-group\">\n        <label for= \"inputAuthors\">Authors</label>\n        <div class=\"input-group\">\n            <input type=\"text\" #authorname='ngModel' required name=\"authorname\" [(ngModel)]=\"authorInput\" class=\"form-control\" id=\"inputAuthors\" placeholder=\"Add Authors...\">\n            &nbsp;\n            <button class=\"btn btn-outline-primary\" [disabled] = \"!authorname.valid\" (click)=\"add_authors(authorname.value); authorInput = ''\">Add Author</button>\n        </div>\n        <div class=\"col-md-auto\">\n          <span *ngFor=\"let author of insertion.authors; let i = index\" class=\"badge badge-secondary\">{{author}} \n            <span (click) = \"insertion.authors.splice(i,1)\">\n                <i class=\" bt fas fa-times-circle\"></i>\n            </span>\n          </span>\n        </div>\n      </div>\n\n      <div [hidden]=\"authorname.pristine || authorInput || insertion.authors.length\"\n          class=\"alert alert-danger\">\n        Authors are required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputEdition\">Edition</label>\n        <input type=\"number\" #edition=\"ngModel\" pattern=\"\\d+\" required name=\"edition\" [(ngModel)]=\"insertion.edition\" class=\"form-control\" id=\"inputEdition\" \n        placeholder=\"Enter Edition\">\n      </div>\n    \n      <div [hidden]=\"edition.valid || edition.pristine\"\n          class=\"alert alert-danger\">\n        Edition is not valid\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputFaculty\">Faculty</label>\n        <input type=\"text\" #faculty=\"ngModel\" required name=\"faculty\" [(ngModel)]=\"insertion.faculty\" class=\"form-control\" id=\"inputFaculty\" \n        placeholder=\"Enter Faculty\">\n      </div>\n    \n      <div [hidden]=\"faculty.valid || faculty.pristine\"\n          class=\"alert alert-danger\">\n        Faculty is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputUniversity\">University</label>\n        <input type=\"text\" #university=\"ngModel\" required name=\"university\" [(ngModel)]=\"insertion.university\" class=\"form-control\" id=\"inputUniversity\" \n        placeholder=\"Enter University\">\n      </div>\n    \n      <div [hidden]=\"university.valid || university.pristine\"\n          class=\"alert alert-danger\">\n        University is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputStartPrice\">Start Price</label>\n        <input type=\"number\" #start_price=\"ngModel\" pattern=\"\\d+(\\.\\d{1,2})?\" required name=\"start_price\" [(ngModel)]=\"insertion.start_price\" class=\"form-control\" id=\"inputStartPrice\" \n        placeholder=\"Enter Start Price\">\n      </div>\n    \n      <div [hidden]=\"start_price.valid || start_price.pristine\"\n          class=\"alert alert-danger\">\n        Start Price is not valid\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputReservePrice\">Reserve Price</label>\n        <input type=\"number\" #reserve_price=\"ngModel\" pattern=\"\\d+(\\.\\d{1,2})?\" required name=\"reserve_price\" [(ngModel)]=\"insertion.reserve_price\" \n        class=\"form-control\" id=\"inputReservePrice\" placeholder=\"Enter Reserve Price\">\n      </div>\n    \n      <div [hidden]=\"!reserve_price.valid || !start_price.valid || (reserve_price.value > start_price.value)\"\n          class=\"alert alert-danger\">\n        Reserve Price must be greater than Start Price\n      </div>\n\n      <div [hidden]=\"reserve_price.valid || reserve_price.pristine\"\n          class=\"alert alert-danger\">\n        Reserve Price is not valid\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputExpireDate\">Expire Date</label>\n        <input type=\"datetime-local\" #expire_date = \"ngModel\" required name=\"expire_date\" [(ngModel)]=\"insertion.expire_date\" class=\"form-control\" id=\"inputExpireDate\" \n        placeholder=\"Enter Expire Date\" min = \"{{get_today_date() | date: 'yyyy-MM-ddTHH:mm'}}\">\n      </div>\n    \n      <div [hidden]=\"expire_date.valid || expire_date.pristine\"\n          class=\"alert alert-danger\">\n        Expire Date is required\n      </div>\n      \n      <div *ngIf=\"errmessage\" class=\"alert alert-danger\" role=\"alert\">\n        Post Insertion Error: {{errmessage}}\n      </div>\n\n       \n      <button class=\"btn btn-lg btn-primary btn-block\" \n      [disabled]=\" !title.valid || !insertion.authors.length || !edition.valid || !faculty.valid || !university.valid || !start_price.valid || \n      !reserve_price.valid || !expire_date.valid || (insertion.reserve_price <= insertion.start_price)\" \n      (click)=\"post_insertion();\">Post</button>\n      <br>\n      <br>\n   \n     \n    </form>\n    </div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SocketioService } from '../../Services/socketio.service';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { PrivateChatHttpService } from '../../Services/private-chat-http.service';\nimport { PrivateChat } from '../../Objects/PrivateChat';\nimport { isIosPrivateChatList } from '../../Objects/IosObject' \nimport { Subscription } from 'rxjs'\n\n\n@Component({\n  selector: 'app-private-chat-list',\n  templateUrl: './private-chat-list.component.html',\n  styleUrls: ['./private-chat-list.component.css']\n})\nexport class PrivateChatListComponent implements OnInit, OnDestroy {\n\n\n  public chats: PrivateChat[]\n  private subscriptions : Subscription = new Subscription()\n\n  constructor( private sio: SocketioService, public pchs: PrivateChatHttpService, public uhs: UserHttpService, private router: Router) { }\n\n  ngOnInit() {\n    if (!this.uhs.get_token())\n      this.router.navigate(['**'])\n    else {\n      this.get_chats();\n      this.subscriptions.add(this.sio.connect().subscribe( (m) => {\n        if ((isIosPrivateChatList(m) && this.uhs.get_token() && m.users.includes(this.uhs.get_id() ))){\n          this.get_chats();\n        }\n      }));\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe()\n  }\n\n  public get_chats() {\n    this.pchs.get_chats().subscribe(\n      ( chats ) => {\n        this.chats = chats;\n      } , (err) => {\n        console.log(err)\n      }\n    );\n  }\n\n  public get_other_user(chat:PrivateChat){\n    var token_info = this.uhs.get_id()\n    if(chat.sender && chat.sender._id!=token_info)\n      return chat.sender.username;\n    \n    if(chat.insertionist && chat.insertionist._id!=token_info)\n      return chat.insertionist.username\n\n    return 'User deleted'\n  }\n\n  public get_insertion(chat:PrivateChat) {\n    return chat.insertion_id\n  }\n\n  public get_last_message(chat:PrivateChat){\n    if(!chat.messages.length)\n      return ''\n    \n    var last_message = chat.messages[chat.messages.length-1];\n    \n    return last_message.content.length>60?last_message.content.slice(0,59) + \"...\":last_message.content;\n    \n  }\n\n  public isRead(chat:PrivateChat){\n    var token_info = this.uhs.get_id()\n    if(chat.sender && chat.sender._id==token_info)\n      return chat.senderRead;\n    \n    if(chat.insertionist && chat.insertionist._id==token_info)\n      return chat.insertionistRead;\n\n    return false;\n  }\n\n  public goToChat(chat:PrivateChat){\n    this.router.navigate(['/private_chats/' + chat._id])\n  }\n  \n}\n","<div class=\"container\" style=\"margin-top: 20px;\" >\n\n    <div>  \n        <h1 class=\"h3 mb-3 font-weight-normal\">Private Chats</h1>\n    </div>\n\n    <div *ngIf=\"chats && !chats.length\" class=\"container text-center my-4\">\n        <h3>No chats to show</h3>\n    </div>\n\n    <div *ngFor=\"let chat of chats\" (click)=\"goToChat(chat)\" class=\"card\" style=\"margin: 5px; cursor:pointer;\" \n        [ngStyle]=\"{'background-color': !isRead(chat) ? 'rgb(241, 234, 148)' : ''}\"> \n        <div class=\"card-body\">\n            <h4 class=\"card-subtitle mb-2\">\n                <i class = 'fa fa-user-circle'></i> \n                {{get_other_user(chat)}} \n                <span *ngIf = '!get_insertion(chat)'  style=\"color: tomato\">Insertion Deleted</span>\n                <span *ngIf = 'get_insertion(chat)' class=\"text-muted\">{{chat.insertion_id.title}}</span>\n                <small *ngIf = \"chat.messages.length\" class=\"float-right text-align-right text-muted my-2\" style= \"font-size: 60%;\">\n                    <i class=\"far fa-clock\"></i>&nbsp;\n                    {{chat.messages[chat.messages.length-1].timestamp  | date}} / {{chat.messages[chat.messages.length-1].timestamp  | date:'shortTime'}} \n                </small>\n            </h4>\n            <p>{{get_last_message(chat)}}</p>\n        </div>\n    </div>\n\n</div>\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { SocketioService } from '../../Services/socketio.service';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { PrivateChatHttpService } from '../../Services/private-chat-http.service';\nimport { PrivateChat } from '../../Objects/PrivateChat';\nimport { isIosPrivateChat } from '../../Objects/IosObject' \nimport { Message } from '../../Objects/Message';\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'app-private-chat',\n  templateUrl: './private-chat.component.html',\n  styleUrls: ['./private-chat.component.css']\n})\nexport class PrivateChatComponent implements OnInit, OnDestroy {\n\n  public chat: PrivateChat;\n  public message : string;\n  private subscriptions : Subscription = new Subscription()\n\n  constructor( private sio: SocketioService , public pchs: PrivateChatHttpService, public uhs: UserHttpService, private router: Router , private route: ActivatedRoute) {}\n\n\n  ngOnInit(): void {\n    if (!this.uhs.get_token())\n      this.router.navigate(['**'])\n    else {\n      this.get_chat();\n      this.subscriptions.add (this.sio.connect().subscribe( (m) => {\n        if ((isIosPrivateChat(m) && this.chat && m.id == this.chat._id)){\n          this.get_chat();\n        }\n      }));\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe()\n  }\n\n  public get_chat(){\n    this.pchs.get_chat(this.route.snapshot.params).subscribe(\n      ( chat ) => {\n        if (!chat)\n          this.router.navigate(['**'])\n        else \n          this.chat = chat;\n          this.pchs.put_chat_read(chat._id).subscribe(\n            (  ) => {\n            } , (err) => {\n              console.log(err)\n            }\n          );\n      } , (err) => {\n        console.log(err)\n        this.router.navigate(['**'])\n      }\n    );\n  }\n\n  public isCurrentUser(message: Message){\n    var token_info = this.uhs.get_id()\n    if(message.author && message.author._id==token_info)\n      return true;\n  \n    return false\n  }\n\n  public get_other_user(){\n    var token_info = this.uhs.get_id()\n    if(this.chat.sender && this.chat.sender._id!=token_info)\n      return this.chat.sender.username;\n    \n    if(this.chat.insertionist && this.chat.insertionist._id!=token_info)\n      return this.chat.insertionist.username\n\n    return 'User deleted'\n  }\n\n  public post_chat() {\n    this.pchs.put_chat_content(this.message,this.route.snapshot.params.id).subscribe( (m) => {\n      console.log('Message posted');\n      this.set_empty();\n      this.get_chat();\n    }, (error) => {\n      console.log('Error occurred while posting: ' + error);\n    });\n  }\n\n  private set_empty() {\n    this.message = '';\n  }\n\n}\n\n","<div *ngIf=\"chat\" class=\"card m-0\">\n    <div class=\"\">\n        <div class=\"selected-user\">\n            <h4 class=\"name my-4\" style=\"text-align : center;\">\n                <a *ngIf = \"chat.insertion_id\" [routerLink]=\"['/insertions', chat.insertion_id._id]\" >\n                    {{chat.insertion_id.title}}\n                </a>\n                <p *ngIf = \"!chat.insertion_id\">\n                    Insertion Deleted\n                </p>\n            </h4>\n            To: <span class=\"name\">{{get_other_user()}} </span> &nbsp;\n\n        </div>\n        <div class=\"chat-container\">\n            <ul class=\"chat-box chatContainerScroll\">\n                <span *ngFor=\"let message of chat.messages\">\n                    <li *ngIf=\"!isCurrentUser(message)\" class=\"chat-left\">\n                        <div class=\"chat-avatar\">\n                            <i class=\"fa fa-user-circle\"></i>\n                            <div class=\"chat-name\">{{message.author?message.author.username:'Deleted User'}}</div>\n                        </div>\n                        <div class=\"chat-text\">{{message.content}}</div>\n                        <div class=\"chat-hour\">{{message.timestamp | date}} / <br> {{message.timestamp | date:'shortTime'}} \n                        </div>\n                    </li>\n\n                    <li *ngIf=\"isCurrentUser(message)\" class=\"chat-right\">\n                        <div class=\"chat-hour\">{{message.timestamp | date}} / <br> {{message.timestamp | date:'shortTime'}} \n                        </div>\n                        <div class=\"chat-text\">{{message.content}}</div>\n                        <div class=\"chat-avatar\">\n                            <i class=\"fa fa-user-circle\"></i>\n                            <div class=\"chat-name\">{{message.author?message.author.username:'Deleted User'}}</div>\n                        </div>\n                    </li>\n                </span>\n                \n            </ul>\n            <div class=\"jumbotron mb-3 py-4\">\n                <div class=\"container\">\n                    <div class=\"form-group my-3\">\n                        <textarea class=\"form-control\" [(ngModel)]=\"message\" #messagetx id=\"messagetext\" \n                        rows=\"3\" placeholder=\"Enter your message here\"></textarea>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"post_chat()\" >Post <i class=\"fas fa-paper-plane\"></i></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public errmessage = undefined;\n  public user = { mail: '', password: '', username: '', location: '', name: '', surname: ''};\n\n  constructor( public uhs: UserHttpService, public router: Router ) { }\n\n  ngOnInit() {\n  }\n\n  signup() {\n    this.uhs.register( this.user ).subscribe( (d) => {\n      console.log('Registration ok: ' + JSON.stringify(d) );\n      this.errmessage = undefined;\n      this.uhs.login(this.user.mail, this.user.password).subscribe( (d) => {\n        console.log('Login granted: ' + JSON.stringify(d) );\n        console.log('User service token: ' + this.uhs.get_token() );\n        this.errmessage = undefined;\n        this.router.navigate(['/insertions']);\n      }, (err) => {\n        console.log('Login error: ' + JSON.stringify(err) );\n        this.errmessage = err.message;\n  \n      });\n    }, (err) => {\n      console.log('Signup error: ' + JSON.stringify(err.error.errormessage) );\n      this.errmessage = err.error.errormessage || err.error.message;\n\n    });\n\n  }\n\n}","<div class=\"container\" style=\"width: 350px; margin-top: 20px;\" >\n\n    <form class=\"form-signin\"  >\n      \n      <div class=\"text-center\">  \n        <i class=\"fas fa-envelope loginlogo\" style=\"width: 50px; height: 50px;\"></i>\n        <h1 class=\"h3 mb-3 font-weight-normal\">Sign-up</h1>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"inputEmail\">Email address</label>\n        <input type=\"email\" #mail=\"ngModel\" name=\"mail\" [(ngModel)]=\"user.mail\" pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\" class=\"form-control\" required id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n      </div>\n    \n      <div [hidden]=\"mail.valid || mail.pristine\"\n          class=\"alert alert-danger\">\n        Mail is not valid\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"inputUsername\">Username</label>\n        <input type=\"text\" #username=\"ngModel\" required name=\"username\" [(ngModel)]=\"user.username\" class=\"form-control\" id=\"inputUsername\" placeholder=\"Enter username\">\n      </div>\n    \n      <div [hidden]=\"username.valid || username.pristine\"\n          class=\"alert alert-danger\">\n        Username is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputPassword\">Password</label>\n        <input type=\"password\" #password=\"ngModel\" required name=\"password\" [(ngModel)]=\"user.password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\">\n      </div>\n    \n      <div [hidden]=\"password.valid || password.pristine\"\n          class=\"alert alert-danger\">\n        Password is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" #name=\"ngModel\" required name=\"name\" [(ngModel)]=\"user.name\" class=\"form-control\" id=\"inputName\" placeholder=\"Enter name\">\n      </div>\n    \n      <div [hidden]=\"name.valid || name.pristine\"\n          class=\"alert alert-danger\">\n        Name is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputSurname\">Surname</label>\n        <input type=\"text\" #surname=\"ngModel\" required name=\"surname\" [(ngModel)]=\"user.surname\" class=\"form-control\" id=\"inputSurname\" placeholder=\"Enter surname\">\n      </div>\n    \n      <div [hidden]=\"surname.valid || surname.pristine\"\n          class=\"alert alert-danger\">\n        Surname is required\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"inputLocation\">Location</label>\n        <input type=\"text\" #location=\"ngModel\" required name=\"location\" [(ngModel)]=\"user.location\" class=\"form-control\" id=\"inputLocation\" placeholder=\"Enter location\">\n      </div>\n    \n      <div [hidden]=\"location.valid || location.pristine\"\n          class=\"alert alert-danger\">\n        Location is required\n      </div>  \n    \n      <div *ngIf=\"errmessage\" class=\"alert alert-danger\" role=\"alert\">\n        Error: {{errmessage}}\n      </div>\n    \n      <button class=\"btn btn-lg btn-primary btn-block\" [disabled]=\" !mail.valid || !password.valid || !username.valid || !name.valid || !surname.valid || !location.valid\" (click)=\"signup();\">Sign up</button>\n      <br>\n      <br>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signupmod',\n  templateUrl: './signupmod.component.html',\n  styleUrls: ['./signupmod.component.css']\n})\n\nexport class SignupmodComponent implements OnInit {\n  public errmessage = undefined;\n  public user = { password: '', username: ''};\n\n  constructor( public uhs: UserHttpService, public router: Router ) { }\n\n  ngOnInit() {\n    if (!this.uhs.get_token() || !this.uhs.is_moderator() || !this.uhs.is_validated())\n      this.router.navigate(['**'])\n  }\n\n  signup() {\n    this.uhs.registerMod( this.user ).subscribe( (d) => {\n      console.log('Registration ok: ' + JSON.stringify(d) );\n      this.errmessage = undefined;\n      this.router.navigate([\"/insertions\"]);\n    }, (err) => {\n      console.log('Signup error: ' + JSON.stringify(err.error.errormessage) );\n      this.errmessage = err.error.errormessage || err.error.message;\n\n    });\n\n  }\n\n}\n","<div class=\"container\" style=\"width: 350px; margin-top: 20px;\" >\n\n    <form class=\"form-signin\"  >\n      \n      <div class=\"text-center\">  \n        <i class=\"fas fa-envelope loginlogo\" style=\"width: 50px; height: 50px;\"></i>\n        <h1 class=\"h3 mb-3 font-weight-normal\">Sign up new Mod</h1>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"inputUsername\">Username</label>\n        <input type=\"text\" #username=\"ngModel\" required name=\"username\" [(ngModel)]=\"user.username\" class=\"form-control\" id=\"inputUsername\" placeholder=\"Enter username\">\n      </div>\n    \n      <div [hidden]=\"username.valid || username.pristine\"\n          class=\"alert alert-danger\">\n        Username is required\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"inputPassword\">Password</label>\n        <input type=\"password\" #password=\"ngModel\" required name=\"password\" [(ngModel)]=\"user.password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\">\n      </div>\n    \n      <div [hidden]=\"password.valid || password.pristine\"\n          class=\"alert alert-danger\">\n        Password is required\n      </div>\n    \n      <div *ngIf=\"errmessage\" class=\"alert alert-danger\" role=\"alert\">\n        Error: {{errmessage}}\n      </div>\n    \n      <button class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!password.valid || !username.valid\" (click)=\"signup();\">Sign up new Mod</button>\n      <br>\n      <br>\n    </form>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { SocketioService } from '../../Services/socketio.service';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { User } from '../../Objects/User'\nimport { isIosUser, isIosUserDeleted } from 'src/app/Objects/IosObject';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit, OnDestroy {\n\n  public users : User[]\n  private subscriptions : Subscription = new Subscription()\n\n  constructor( private uhs : UserHttpService, private router: Router, private sio: SocketioService) { }\n\n  ngOnInit(): void {\n    if (this.uhs.get_token() && this.uhs.is_moderator() && this.uhs.is_validated()){\n      this.get_users()\n      this.subscriptions.add(this.sio.connect().subscribe( (m) => {\n        if(isIosUser(m) || isIosUserDeleted(m))\n          this.get_users()\n      }));\n    }else \n      this.router.navigate(['**'])\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe()\n  }\n\n  public get_users() {\n    this.uhs.get_users().subscribe(\n      ( users ) => {\n        this.users = users;\n      }, (err) => {\n        console.log(err)\n        this.router.navigate(['**'])\n      });\n  }\n\n  hasToken(): boolean {\n    return this.uhs.get_token()!= undefined\n  }\n\n  getToken(){\n    return {\n      username: this.uhs.get_username(),\n      mail: this.uhs.get_mail(),\n      id: this.uhs.get_id(),\n      mod: this.uhs.is_moderator(),\n      validated: this.uhs.is_validated()\n    }\n  }\n\n  public delete_user(id : string) {\n    if(confirm(\"Do you really want to delete this user?\")) {\n      this.uhs.delete_user(id).subscribe(\n        () => {\n          this.get_users()\n        }, (err) => {\n          console.log(err)\n          this.router.navigate(['**'])\n        }\n      );\n    }\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 20px;\" >\n\n    <div>  \n        <h1 class=\"h3 mb-3 font-weight-normal\">Users List</h1>\n    </div>\n\n    <div *ngFor=\"let user of users\" class=\"card\" style=\"margin: 5px;\" > \n        <div class=\"card-body\" [ngClass]=\"{'text-muted': !user.mod}\" >\n            <h4 class=\"card-subtitle mb-2\">\n                <i class = 'fa' [ngClass]=\"{ 'fa-user-circle': !user.mod, 'fa-star': user.mod }\"></i> \n                {{user.username}} ({{ hasToken() && getToken().id == user._id ? 'YOU' : (user.mod ? 'moderator':'user')}})\n                <button *ngIf = '!user.mod' type= 'button' class ='float-right btn-sm btn btn-outline-dark text-align-right' (click) = 'delete_user(user._id)'>\n                    <i class=\"fa fa-trash\"></i>\n                </button>     \n            </h4>\n\n            <button type= 'button' class ='btn-sm btn btn-outline-dark text-align-right dropdown-toggle' data-toggle= 'collapse' attr.data-target = \"#toggle-{{user._id}}\">\n                <span class=\"caret\">Info &nbsp; </span>\n            </button> \n            <div id = 'toggle-{{user._id}}' class = 'collapse my-3' >\n                <h6 class=\"card-subtitle mb-2\">mail: {{user.mail ? user.mail : 'none'}} </h6>\n                <h6 class=\"card-subtitle mb-2\">location: {{user.location ? user.location : 'none'}} </h6>\n                <h6 class=\"card-subtitle mb-2\">name: {{user.name ? user.name : 'none'}} </h6>\n                <h6 class=\"card-subtitle mb-2\">surname: {{user.surname ? user.surname : 'none'}} </h6>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserHttpService } from '../../Services/user-http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-stats',\n  templateUrl: './user-stats.component.html',\n  styleUrls: ['./user-stats.component.css']\n})\nexport class UserStatsComponent implements OnInit {\n\n  public mod_stats;\n  public student_stats;\n\n\n  constructor( public uhs: UserHttpService, public router: Router ) { }\n  \n  ngOnInit(): void {\n    this.get_stats();\n  }\n\n  public get_stats(){\n    if(this.uhs.is_moderator()){\n      this.uhs.get_mod_stats().subscribe((stats) => {\n          this.mod_stats=stats \n      });\n    }else{\n      this.uhs.get_student_stats().subscribe((stats) => {\n        this.student_stats=stats \n    });\n    }\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 20px;\" >\n\n    <div>  \n        <h1 class=\"h3 mb-3 font-weight-normal\">Statistics</h1>\n    </div>\n\n        <div *ngIf='mod_stats'>\n            <div class='card' style=\"margin: 5px;\">\n                <div class=\"card-body\">\n                    <p>Active Insertions:&nbsp;<span style=\"color: dodgerblue\">{{mod_stats.active_insertion_list}}</span></p>\n                </div>\n            </div>\n            <div class='card' style=\"margin: 5px;\">\n                <div class=\"card-body\">\n                    <p>Insertions concluded successfully:&nbsp;<span style=\"color: dodgerblue\">{{mod_stats.completed_insertion_list}}</span></p>\n                </div>\n            </div>\n            <div class='card' style=\"margin: 5px;\">\n                <div class=\"card-body\">\n                    <p>Insertions concluded unsuccessfully:&nbsp;<span style=\"color: dodgerblue\">{{mod_stats.unsuccesfully_completed_insertion_list}}</span></p>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf='student_stats'>\n            <div class='card' style=\"margin: 5px;\">\n                <div class=\"card-body\">\n                    <p>Created Insertions:</p>\n                    <div *ngIf=\"!student_stats.insertion_list.length\" class=\"container text-center my-4\">\n                        <h5>No insertions to show</h5>\n                    </div>\n                    <div *ngFor='let ins of student_stats.insertion_list' class='card' style=\"margin: 5px;\">\n                        <div class=\"card-body\">\n                            <a [routerLink]=\"['/insertions', ins._id]\">{{ins.title}}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class='card' style=\"margin: 5px;\">\n                <div class=\"card-body\">\n                    <p>Insertions you have partecipated:</p>\n                    <div *ngIf=\"!student_stats.participation_list.length\" class=\"container text-center my-4\">\n                        <h5>No insertions to show</h5>\n                    </div>\n                    <div *ngFor='let ins of student_stats.participation_list' class='card' style=\"margin: 5px;\">\n                        <div class=\"card-body\">\n                            <a [routerLink]=\"['/insertions', ins._id]\">{{ins.title}}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class='card' style=\"margin: 5px;\">\n                <div class=\"card-body\">\n                    <p>Won Insertions:</p>\n                    <div *ngIf=\"!student_stats.winner_list.length\" class=\"container text-center my-4\">\n                        <h5>No insertions to show</h5>\n                    </div>\n                    <div *ngFor='let ins of student_stats.winner_list' class='card' style=\"margin: 5px;\">\n                        <div class=\"card-body\">\n                            <a [routerLink]=\"['/insertions', ins._id]\">{{ins.title}}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n</div>\n\n","enum Kind {\n    notification = 'notification',\n    message = 'message',\n    insertion = 'insertion',\n    private_chat_list = 'private_chat_list',\n    private_chat = 'private_chat',\n    user = 'user',\n    user_deleted = 'user_deleted'\n}\n\ninterface IosObject {\n    readonly type: Kind\n}\n\nexport interface IosNotification extends IosObject {\n    readonly type: Kind.notification\n    readonly user: string    \n} \n\nexport interface IosMessage extends IosObject {\n    readonly type: Kind.message\n    readonly insertion: string\n}\n\nexport interface IosInsertion extends IosObject {\n    readonly type: Kind.insertion\n    readonly id: string\n}\n\nexport interface IosPrivateChatList extends IosObject {\n    readonly type: Kind.private_chat_list\n    readonly users: [string]\n}\n\nexport interface IosPrivateChat extends IosObject {\n    readonly type: Kind.private_chat\n    readonly id: string\n}\n\nexport interface IosUser extends IosObject {\n    readonly type: Kind.user\n}\n\nexport interface IosUserDeleted extends IosObject {\n    readonly type: Kind.user_deleted\n    readonly id: string\n}\n\nexport function isIosNotification (iosObject : any) : iosObject is IosNotification {\n    return iosObject.type && iosObject.type == Kind.notification && iosObject.user && typeof(iosObject.user) === 'string'\n}\n\nexport function isIosMessage (iosObject : any) : iosObject is IosMessage {\n    return iosObject.type && iosObject.type == Kind.message && iosObject.insertion && typeof(iosObject.insertion) === 'string'\n}\n\nexport function isIosInsertion (iosObject : any) : iosObject is IosInsertion {\n    return iosObject.type && iosObject.type == Kind.insertion && iosObject.id && typeof(iosObject.id) === 'string'\n}\n\nexport function isIosPrivateChatList (iosObject : any) : iosObject is IosPrivateChatList {\n    return iosObject.type && iosObject.type == Kind.private_chat_list && iosObject.users && Array.isArray(iosObject.users) && iosObject.users.every(user => typeof(user) === 'string')\n}\n\nexport function isIosPrivateChat (iosObject : any) : iosObject is IosPrivateChat {\n    return iosObject.type && iosObject.type == Kind.private_chat && iosObject.id && typeof(iosObject.id) === 'string'\n}\n\nexport function isIosUser (iosObject : any) : iosObject is IosUser {\n    return iosObject.type && iosObject.type == Kind.user\n}\n\nexport function isIosUserDeleted (iosObject : any) : iosObject is IosUserDeleted {\n    return iosObject.type && iosObject.type == Kind.user_deleted && iosObject.id && typeof(iosObject.id) === 'string'\n}","import { Injectable } from '@angular/core';\nimport { Insertion } from '../Objects/Insertion';\n\nimport { Observable } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { UserHttpService } from './user-http.service';\n\n\n@Injectable()\nexport class InsertionHttpService {\n\n  constructor( private http: HttpClient, private uhs: UserHttpService ) {\n    console.log('Insertion service instantiated');\n    console.log('User service token: ' + uhs.get_token() );\n}\n\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        'body was: ' + JSON.stringify(error.error));\n    }\n\n    return throwError('Something bad happened; please try again later.');\n  }\n  \n\n  get_insertion(params: any): Observable<Insertion> {\n    if(this.uhs.get_token()){\n      const options = {\n        headers: new HttpHeaders({\n          authorization: 'Bearer ' + this.uhs.get_token(),\n          'cache-control': 'no-cache',\n          'Content-Type':  'application/json',\n        })\n      };\n      return this.http.get<Insertion>( this.uhs.url + '/insertions/'+ params.id, options).pipe(\n          tap( (data) => console.log(JSON.stringify(data))) ,\n          catchError( this.handleError )\n        );\n    }else{\n      return this.http.get<Insertion>( this.uhs.url + '/insertions/'+ params.id).pipe(\n        tap( (data) => console.log(JSON.stringify(data))) ,\n        catchError( this.handleError )\n      );\n    }\n  }\n  \n\n  get_insertions(params?: any): Observable<Insertion[]> {\n    return this.http.get<Insertion[]>( this.uhs.url + '/insertions', {params: params}).pipe(\n        tap( (data) => console.log(JSON.stringify(data))) ,\n        catchError( this.handleError )\n      );\n  }\n\n\n  post_insertion(insertion : any) : Observable <any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.post( this.uhs.url + '/insertions', insertion, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n\n  put_price(params: any, price: number):Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.put( this.uhs.url + '/insertions/'+ params.id + '/price', {current_price: price}, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n\n  put_message( params: any, m: any ): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    console.log('Posting ' + JSON.stringify(m) );\n\n    if (params.m_id) {\n      return this.http.put( this.uhs.url + '/insertions/' + params.id + '/public_messages/' + params.m_id, {content: m},  options ).pipe(\n        catchError(this.handleError)\n      );\n    }else {\n      return this.http.put( this.uhs.url + '/insertions/' + params.id + '/public_messages', {content: m},  options ).pipe(\n        catchError(this.handleError)\n      );\n    }\n  }\n\n\n  edit_insertion (params: any, insertion: any ): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    console.log('Editing Insertion ' + params.id );\n    \n    return this.http.put( this.uhs.url + '/insertions/' + params.id + '/content', insertion,  options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data))\n      })\n    );\n    \n  }\n\n\n  delete_insertion( params: any ): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    console.log('Deleting Insertion ' + JSON.stringify(params.id) );\n\n    return this.http.delete( this.uhs.url + '/insertions/' + params.id, options ).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Notification } from '../Objects/Notification';\nimport { Observable } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { UserHttpService } from './user-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationHttpService {\n\n  private notificationsStateSource = new Subject<any>();\n  public notificationsState = this.notificationsStateSource.asObservable();\n\n  constructor(private http: HttpClient, private uhs: UserHttpService ) {\n    console.log('Notification service instantiated');\n    console.log('User service token: ' + uhs.get_token() );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        'body was: ' + JSON.stringify(error.error));\n    }\n\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  get_notifications(): Observable<Notification[]> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    return this.http.get<Notification[]>( this.uhs.url + '/notifications', options).pipe(\n        tap( (data) => console.log(JSON.stringify(data))) ,\n        catchError( this.handleError )\n      );\n  }\n\n  put_notification_read(id: string) : Observable <any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    return this.http.put( this.uhs.url + '/notifications/' + id, {}, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n  set_notifications_state_after_login() {\n    this.notificationsStateSource.next()\n  }\n\n  get_unread_notifications_count(): Observable<number> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    \n    return this.http.get<number>( this.uhs.url + '/notifications/unreadcount', options ).pipe(\n      tap( (data) => {\n        console.log(data);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PrivateChat } from '../Objects/PrivateChat';\n\nimport { Observable } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { tap, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { UserHttpService } from './user-http.service';\n\n@Injectable()\n\nexport class PrivateChatHttpService {\n\n\n  private chatsStateSource = new Subject<any>();\n  public chatsState = this.chatsStateSource.asObservable();\n\n  constructor( private http: HttpClient, private uhs: UserHttpService ) {\n    console.log('Private chat service instantiated');\n    console.log('User service token: ' + uhs.get_token() );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        'body was: ' + JSON.stringify(error.error));\n    }\n\n    return throwError('Something bad happened; please try again later.');\n  }\n  \n\n  get_chat(params: any): Observable<PrivateChat> {\n      const options = {\n        headers: new HttpHeaders({\n          authorization: 'Bearer ' + this.uhs.get_token(),\n          'cache-control': 'no-cache',\n          'Content-Type':  'application/json',\n        })\n      };\n      return this.http.get<PrivateChat>( this.uhs.url + '/private_chats/'+ params.id, options).pipe(\n          tap( (data) => console.log(JSON.stringify(data))) ,\n          catchError( this.handleError )\n        );\n  }\n\n\n  get_chats(): Observable<PrivateChat[]> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    return this.http.get<PrivateChat[]>( this.uhs.url + '/private_chats', options).pipe(\n        tap( (data) => console.log(JSON.stringify(data))) ,\n        catchError( this.handleError )\n      );\n  }\n\n\n  post_chat(message : string, insertion_id: string) : Observable <any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    var body = {\n      insertion_id: insertion_id,\n      message: message\n    }\n\n    return this.http.post( this.uhs.url + '/private_chats', body, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n\n  put_chat_read(id: string) : Observable <any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    return this.http.put( this.uhs.url + '/private_chats/' + id + '/read', {}, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n\n  put_chat_content(message : string, id : string) : Observable <any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    return this.http.put( this.uhs.url + '/private_chats/' + id + '/message', {content : message}, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n  \n  get_unread_chats_count(): Observable<number> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.uhs.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n    \n    return this.http.get<number>( this.uhs.url + '/private_chats/unreadcount', options ).pipe(\n      tap( (data) => {\n        console.log(data);\n      })\n    );\n  }\n\n  set_chats_state_after_login() {\n    this.chatsStateSource.next()\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserHttpService } from './user-http.service';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class SocketioService {\n\n  private socket;\n  constructor( private uhs: UserHttpService ) { }\n\n  connect(): Observable< any > {\n\n    this.socket = io(this.uhs.url);\n\n    return new Observable( (observer) => {\n\n      this.socket.on('broadcast', (m) => {\n        console.log('Socket.io message received: ' + JSON.stringify(m) );\n        observer.next( m );\n\n      });\n\n      this.socket.on('error', (err) => {\n        console.log('Socket.io error: ' + err );\n        observer.error( err );\n      });\n\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport * as jwtdecode from 'jwt-decode';\n\nimport {User} from '../Objects/User'\nimport {ModStats, StudentStats} from '../Objects/UserStats'\n\ninterface TokenData {\n  username:string,\n  mail:string,\n  mod:boolean,\n  id:string,\n  validated:boolean\n}\n\n@Injectable()\nexport class UserHttpService {\n\n  constructor( private http: HttpClient ) {\n    console.log('User service instantiated');\n\n  }\n\n  public token = undefined;\n  public url = 'http://10.0.2.2:8080';\n\n  login( mail: string, password: string): Observable<any> {\n    console.log('Login: ' + mail + ' ' + password );\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Basic ' + btoa( mail + ':' + password),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/x-www-form-urlencoded',\n      })\n    };\n\n    return this.http.get( this.url + '/login',  options, ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data));\n        this.token = data.token;\n        localStorage.setItem('session_id', this.token );\n      }));\n  }\n\n  logout() {\n    console.log('Logging out');\n    this.token = undefined;\n    localStorage.setItem('session_id', '');\n    \n\n  }\n\n  register( user ): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.post( this.url + '/users/students', user, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n\n  }\n\n  registerMod( user ): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.post( this.url + '/users/mods', user, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n  edit( user ): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.put( this.url + '/users', user, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n        this.token = data.token;\n        localStorage.setItem('session_id', this.token );\n      })\n    );\n  }\n\n  delete_user(id : string): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.delete( this.url + '/users/' + id, options ).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n  get_users() : Observable <User[]> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.get<User[]>(this.url + '/users', options).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n  \n  get_mod_stats(): Observable <ModStats> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.get<ModStats>(this.url + '/users/stats', options).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n  get_student_stats(): Observable <StudentStats> {\n    const options = {\n      headers: new HttpHeaders({\n        authorization: 'Bearer ' + this.get_token(),\n        'cache-control': 'no-cache',\n        'Content-Type':  'application/json',\n      })\n    };\n\n    return this.http.get<StudentStats>(this.url + '/users/stats', options).pipe(\n      tap( (data) => {\n        console.log(JSON.stringify(data) );\n      })\n    );\n  }\n\n  set_token_from_storage(){\n    this.token=localStorage.getItem('session_id')===''?undefined:localStorage.getItem('session_id')\n  }\n\n  get_token() {\n    return this.token;\n  }\n\n  get_username() {\n    return (jwtdecode(this.token) as TokenData).username;\n  }\n\n  get_mail() {\n    return (jwtdecode(this.token) as TokenData).mail;\n  }\n\n  get_id() {\n    return (jwtdecode(this.token) as TokenData).id;\n  }\n\n  is_validated(): boolean {\n    return (jwtdecode(this.token) as TokenData).validated;\n  }\n\n  is_moderator(): boolean {\n    return (jwtdecode(this.token) as TokenData).mod;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InsertionListComponent } from './Components/insertion-list/insertion-list.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { SignupComponent } from './Components/signup/signup.component';\nimport { SignupmodComponent } from './Components/signupmod/signupmod.component';\nimport { EditProfileComponent } from './Components/edit-profile/edit-profile.component';\nimport { InsertionComponent } from './Components/insertion/insertion.component';\nimport { MessageReplyComponent } from './Components/message-reply/message-reply.component';\nimport { PrivateChatListComponent } from './Components/private-chat-list/private-chat-list.component';\nimport { PostInsertionComponent } from './Components/post-insertion/post-insertion.component';\nimport { EditInsertionComponent } from './Components/edit-insertion/edit-insertion.component'\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component'\nimport { UserListComponent } from './Components/user-list/user-list.component'\nimport { PrivateChatComponent } from './Components/private-chat/private-chat.component';\nimport { NotificationsComponent } from './Components/notifications/notifications.component';\nimport { UserStatsComponent } from './Components/user-stats/user-stats.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/insertions', pathMatch: 'full' },\n  { path: 'insertions', component: InsertionListComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'signupmod', component: SignupmodComponent },\n  { path: 'editprofile', component: EditProfileComponent },\n  { path: 'insertions/:id', component: InsertionComponent },\n  { path: 'insertions/:id/public_message/:m_id', component: MessageReplyComponent},\n  { path: 'private_chats', component: PrivateChatListComponent},\n  { path: 'postinsertion', component : PostInsertionComponent},\n  { path: 'editinsertion/:id', component : EditInsertionComponent},\n  { path: 'userlist', component: UserListComponent},\n  { path: 'private_chats/:id', component : PrivateChatComponent},\n  { path: 'notifications', component : NotificationsComponent},\n  { path: 'userstats', component : UserStatsComponent},\n  { path: '**',component: PageNotFoundComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { UserHttpService } from './Services/user-http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title = 'Client'\n\n  constructor( private uhs: UserHttpService){}\n\n  ngOnInit(): void {\n    this.uhs.set_token_from_storage();\n  }\n\n\n}\n\n\n","<div class = \"container\">\n  <app-navbar></app-navbar>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserHttpService } from './Services/user-http.service';\nimport { SocketioService } from './Services/socketio.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InsertionListComponent } from './Components/insertion-list/insertion-list.component';\nimport { InsertionHttpService } from './Services/insertion-http.service';\nimport { NavbarComponent } from './Components/navbar/navbar.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { SignupComponent } from './Components/signup/signup.component';\nimport { SignupmodComponent } from './Components/signupmod/signupmod.component';\nimport { EditProfileComponent } from './Components/edit-profile/edit-profile.component';\nimport { InsertionComponent } from './Components/insertion/insertion.component';\nimport { MessagePostComponent } from './Components/message-post/message-post.component';\nimport { MessageReplyComponent } from './Components/message-reply/message-reply.component';\nimport { PrivateChatListComponent } from './Components/private-chat-list/private-chat-list.component';\nimport { PrivateChatHttpService } from './Services/private-chat-http.service';\nimport { PostInsertionComponent } from './Components/post-insertion/post-insertion.component';\nimport { EditInsertionComponent } from './Components/edit-insertion/edit-insertion.component';\nimport { PageNotFoundComponent } from './Components/page-not-found/page-not-found.component';\nimport { UserListComponent } from './Components/user-list/user-list.component';\nimport { PrivateChatComponent } from './Components/private-chat/private-chat.component';\nimport { NotificationsComponent } from './Components/notifications/notifications.component';\nimport { UserStatsComponent } from './Components/user-stats/user-stats.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InsertionListComponent,\n    NavbarComponent,\n    LoginComponent,\n    SignupComponent,\n    SignupmodComponent,\n    EditProfileComponent,\n    InsertionComponent,\n    MessagePostComponent,\n    MessageReplyComponent,\n    PrivateChatListComponent,\n    PostInsertionComponent,\n    EditInsertionComponent,\n    PageNotFoundComponent,\n    UserListComponent,\n    PrivateChatComponent,\n    NotificationsComponent,\n    UserStatsComponent\n  ],\n  imports: [\n    MDBBootstrapModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {provide: UserHttpService, useClass: UserHttpService },\n    {provide: SocketioService, useClass: SocketioService },\n    {provide: InsertionHttpService, useClass: InsertionHttpService},\n    {provide: PrivateChatHttpService, useClass: PrivateChatHttpService}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener(\"deviceready\", ()=>{\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n}, false);\n\n","/* (ignored) */"],"sourceRoot":"webpack:///"}